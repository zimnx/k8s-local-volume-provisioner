name: "Run E2E"
description: "Runs E2E test suite"
inputs:
  repositoryPath:
    description: "Path to where the project code lives"
    required: true
  jobSuffix:
    description: "E2E job suffix"
    required: true
  suite:
    description: "E2E suite name"
    required: true
  extraArgs:
    description: "Extra arguments for the E2E binary"
    required: false
    default: ""
  baseTimeoutMinutes:
    description: "Default timeout in minutes. Can be extended to accommodate for flake retries."
    required: false
    default: 20
runs:
  using: "composite"
  steps:
  - name: Setup git tags
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    shell: bash
    working-directory: ${{ inputs.repositoryPath }}
    run: ./hack/ci-detect-tags.sh
  - name: Create artifacts dir
    shell: bash
    env:
      ARTIFACTS_DIR: ${{ runner.temp }}/e2e-artifacts
    run: |
      set -euExo pipefail
      shopt -s inherit_errexit

      mkdir "${ARTIFACTS_DIR}"
      echo "ARTIFACTS_DIR=${ARTIFACTS_DIR}" | tee -a ${GITHUB_ENV}
  - name: Setup Kubernetes
    uses: scylladb/scylla-operator/.github/actions/setup-kubernetes@master
    with:
      kubernetesVersion: 1.25.6
  - uses: actions/download-artifact@v3
    with:
      name: driverimage.tar.lz4
      path: ~/
  - name: Load image
    shell: bash
    run: |
      set -euExo pipefail
      shopt -s inherit_errexit

      unlz4 ~/driverimage.tar.lz4 - | sudo podman load

      sudo podman images '${{ env.image_repo_ref }}:ci'
      sudo crictl images
  - name: Setup go
    uses: actions/setup-go@v3
    with:
      go-version: ${{ env.go_version }}
  - name: Deploy local-csi-driver
    working-directory: ${{ inputs.repositoryPath }}
    shell: bash
    run: |
      set -euExo pipefail
      shopt -s inherit_errexit

      timeout 10m ./hack/ci-deploy.sh '${{ env.image_repo_ref }}:ci'
      kubectl get pods -A
  - name: Tolerate flakes on promotion jobs
    shell: bash
    if: ${{ github.event_name != 'pull_request' }}
    run: |
      set -euExo pipefail
      shopt -s inherit_errexit

      echo "FLAKE_ATTEMPTS=5" | tee -a ${GITHUB_ENV}
  - name: Run e2e
    shell: bash
    run: |
      set -euExo pipefail
      shopt -s inherit_errexit

      e2e_timeout_minutes='${{ inputs.baseTimeoutMinutes }}'
      flake_attempts=0
      if [[ -v 'FLAKE_ATTEMPTS' ]]; then
        flake_attempts="${FLAKE_ATTEMPTS}"
        e2e_timeout_minutes="$(( ${e2e_timeout_minutes} + ${flake_attempts} * 10 ))"
      fi

      user="$( id -u )"
      group="$( id -g )"

      timeout "${e2e_timeout_minutes}m" sudo podman run --user="${user}:${group}" --rm \
      --entrypoint=/usr/bin/local-csi-driver-tests \
      -v="${ARTIFACTS_DIR}:${ARTIFACTS_DIR}:rw" \
      -v="/usr/local/bin/kubectl:/usr/bin/kubectl" \
      -v="${HOME}/.kube/config:/kubeconfig:ro" -e='KUBECONFIG=/kubeconfig' \
      '${{ env.image_repo_ref }}:ci' \
      run '${{ inputs.suite }}' \
      --kubeconfig="/kubeconfig" \
      --report-dir="${ARTIFACTS_DIR}" \
      --flake-attempts="${flake_attempts}" \
      ${{ inputs.extraArgs }}
  - name: Dump cluster state
    if: ${{ always() }}
    working-directory: ${{ runner.temp }}
    shell: bash
    run: timeout 10m ${{ inputs.repositoryPath }}/hack/ci-gather-artifacts.sh
  - name: Get machine logs and info
    if: ${{ always() }}
    working-directory: ${{ runner.temp }}/e2e-artifacts
    shell: bash
    run: |
      set -euExo pipefail
      shopt -s inherit_errexit

      sudo podman info > podman.info
      sudo podman images -a > podman.images
      sudo podman stats -a --no-stream --no-reset > podman.stats
      free -h > free
      journalctl -u kubelet > kubelet.log

      journalctl -u crio > crio.log
      sudo iptables -L > iptables.log

      sudo tar -c --use-compress-program=lz4 -f ./kubernetes.tar.lz4 "/etc/kubernetes"

      mkdir container-logs
      for ns in kube-system; do
        mkdir "container-logs/${ns}"
        for cid in $( sudo crictl ps --label="io.kubernetes.pod.namespace=${ns}" -a -q ); do
          cname=$( sudo crictl inspect -o go-template --template='{{ .status.metadata.name }}' "${cid}" )
          sudo crictl logs "${cid}" 1>"container-logs/${ns}/${cname}_${cid}.log" 2>&1
        done
      done
  - name: Collect audit logs
    if: ${{ always() }}
    working-directory: ${{ runner.temp }}/e2e-artifacts
    shell: bash
    run: |
      set -euExo pipefail
      shopt -s inherit_errexit

      sudo cat $( ls /var/log/kube-apiserver-audit*.log | sort -n ) > ./kube-apiserver-audit.log
      jq -s 'group_by(.user.username) | map({"user": .[0].user.username, "total": length, "verbs": (group_by(.verb) | map({"key":.[0].verb, "value": length}) | from_entries)}) | sort_by(.total) | reverse' ./kube-apiserver-audit.log > ./api-call-stats.json
  - name: Compress artifacts
    if: ${{ always() }}
    working-directory: ${{ runner.temp }}
    shell: bash
    run: |
      set -euExo pipefail
      shopt -s inherit_errexit

      tar -c --use-compress-program=lz4 -f ./e2e-artifacts.tar.lz4 "e2e-artifacts/"
  - name: Upload artifacts
    if: ${{ always() }}
    uses: actions/upload-artifact@v3
    with:
      name: e2e-artifacts-${{ inputs.jobSuffix }}.tar.lz4
      path: ${{ runner.temp }}/e2e-artifacts.tar.lz4
      if-no-files-found: error
      retention-days: ${{ env.retention_days }}
